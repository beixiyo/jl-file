import { writeFile } from 'node:fs/promises'
import type { WriteFileOptions } from 'node:fs'

/**
 * 文件写入选项类型
 */
export type WriteType = Parameters<typeof writeFile>

/**
 * 文件写入选项扩展类型
 */
export type WriteOpt = WriteFileOptions & {
  /**
   * 文件打开标志
   *
   * - 'a': 打开文件进行追加。如果文件不存在，则创建该文件。
   * - 'ax': 类似于 'a' 但如果路径存在则失败。
   * - 'a+': 打开文件进行读取和追加。如果文件不存在，则创建该文件。
   * - 'ax+': 类似于 'a+' 但如果路径存在则失败。
   * - 'as': 以同步模式打开文件进行追加。如果文件不存在，则创建该文件。
   * - 'as+': 以同步模式打开文件进行读取和追加。如果文件不存在，则创建该文件。
   * - 'r': 打开文件进行读取。如果文件不存在，则会发生异常。
   * - 'r+': 打开文件进行读写。如果文件不存在，则会发生异常。
   * - 'rs+': 以同步模式打开文件进行读写。指示操作系统绕过本地文件系统缓存。
   * - 'w': 打开文件进行写入。创建（如果它不存在）或截断（如果它存在）该文件。
   * - 'wx': 类似于 'w' 但如果路径存在则失败。
   * - 'w+': 打开文件进行读写。创建（如果它不存在）或截断（如果它存在）该文件。
   * - 'wx+': 类似于 'w+' 但如果路径存在则失败。
   */
  flag?: FileFlag
}

/**
 * 创建文件选项类型
 */
export type CreateFileOpts = {
  /**
   * 已存在文件时，是否删除重建
   * @default false
   */
  overwrite?: boolean
  /**
   * 文件夹不存在时，是否自动创建
   * @default true
   */
  autoCreateDir?: boolean
}

/**
 * 文件打开标志类型
 */
export type FileFlag =
  | 'a'    // 追加写入
  | 'ax'   // 追加写入（文件存在时失败）
  | 'a+'   // 读取和追加写入
  | 'ax+'  // 读取和追加写入（文件存在时失败）
  | 'as'   // 同步追加写入
  | 'as+'  // 同步读取和追加写入
  | 'r'    // 只读
  | 'r+'   // 读写
  | 'rs+'  // 同步读写（绕过缓存）
  | 'w'    // 写入（创建或截断）
  | 'wx'   // 写入（文件存在时失败）
  | 'w+'   // 读写（创建或截断）
  | 'wx+'  // 读写（文件存在时失败）